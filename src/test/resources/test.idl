[Prefix="someNamespace::", NoDelete]
interface AnInterface {
    void aFunction(long param1, optional VoidPtr param2);

    attribute unsigned long long someAttribute;
};

[Prefix = "someNamespaceWithSpace::"]
interface AnotherInterface {
    void AnInterface();

    [Value] AnInterface overloadedFunction([Const, Ref] AnInterface param1);
    [Value] AnInterface overloadedFunction([Const, Ref] AnInterface param1, long secondParam);
};
AnotherInterface implements AnInterface;

[Prefix="someNamespace::"]
interface ErrorCallback {
    boolean reportError(long code, DOMString message);
    AnotherInterface someOtherMethod();
};

enum ErrorCode {
    "INFO",
    "WARN",
    "ERROR"
};

[JSImplementation="ErrorCallback"]
interface JavaErrorCallback {
    void JavaErrorCallback();
    void reportError(ErrorCode code, DOMString message);
    AnotherInterface someOtherMethod(AnInterface anInterface);
};